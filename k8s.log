Kubernetes has a number of features. It can be thought of as:

    a container platform
    a microservices platform
    a portable cloud platform and a lot more

The Kubernetes Master is a collection of three processes that run on a single node in your cluster,
    which is designated as the master node. 
    * kube-apiserver - exposes the Kubernetes API
    * etcd - Consistent and highly-available key value store used as Kubernetes’ backing store for all cluster data
    * kube-controller-manager -  runs controllers 
    * kube-scheduler- watches newly created pods that have no node assigned, and selects a node for them to run on.
    * cloud-controller-manager - controllers that interact with the underlying cloud providers
    
kube-controller-manager:

    Logically, each controller is a separate process, but to reduce complexity, they are all compiled into a single binary and run in a single process.

    These controllers include:

        Node Controller: Responsible for noticing and responding when nodes go down.
        Replication Controller: Responsible for maintaining the correct number of pods for every replication controller  object in the system.
        Endpoints Controller: Populates the Endpoints object (that is, joins Services & Pods).
        Service Account & Token Controllers: Create default accounts and API access tokens for new namespaces

Each individual non-master node in your cluster runs two processes:
    * kubelet, which communicates with the Kubernetes Master.makes sure that containers are running in a pod
    * kube-proxy, a network proxy which reflects Kubernetes networking services on each node
    * Container Runtime responsible for running containers. 
        Kubernetes supports several runtimes: Docker, containerd, cri-o, rktlet and any implementation of the Kubernetes CRI (Container Runtime Interface)
    
The basic Kubernetes objects include:
    Pod
    Service
    Volume
    Namespace
    
Kubernetes contains a number of higher-level abstractions called Controllers.
build upon the basic objects, and provide additional functionality and convenience features.
    ReplicaSet
    Deployment
    StatefulSet
    DaemonSet
    Job
    
Kubernetes Control Plane
    various parts of the Kubernetes Control Plane, such as the Kubernetes Master and kubelet processes, govern how Kubernetes communicates with your cluster. 
    
    maintains a record of all of the Kubernetes Objects in the system, and runs continuous control loops to manage those objects’ state. 
    
    At any given time, the Control Plane’s control loops will respond to changes in the cluster and work to make the actual state of all the objects in the system match the desired state that you provided
